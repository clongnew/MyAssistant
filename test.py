# dic =  {'searchParameters': {'q': '1. What is a langchain loader used for?', 'gl': 'us', 'hl': 'en', 'num': 10, 'type': 'search', 'engine': 'google'}, 'answerBox': {'snippet': "Use document loaderoad data from a source as Document 's. A Document is a piece of text and associated metadata. For example, there are document loaders for loading a simple . txt file, for loading the text contents of any web page, or even for loading a transcript of a YouTube video.", 'snippetHighlighted': ["to load data from a source as Document 's"], 'title': 'Document loaders - LangChain JS', 'link': 'https://js.langchain.com/docs/modules/data_connection/document_loaders/'}, 'organic': [{'title': 'Document loaders - ️   Langchain', 'link': 'https://python.langchain.com/docs/modules/data_connection/document_loaders/', 'snippet': '... load" as well for lazily loading data into memory. Get started\u200b. The simplest loader reads in a file as text and places it all into one document. from langchain ...', 'position': 1}, {'title': "The Beginner's Guide to Summarize YouTube Videos with LangChain Loaders and OpenAI.", 'link': 'https://artificialcorner.com/the-beginners-guide-to-summarize-youtube-videos-with-langchain-loaders-and-openai-4cd1ee5b5e42', 'snippet': "Step 1: Loading the OpenAI API Key. Let's begin with loading the OpenAI API key, which is necessary to use the OpenAI models. Because we store ...", 'date': 'Jul 19, 2023', 'position': 2}, {'title': "Getting Started with LangChain: A Beginner's Guide to Building LLM-Powered Applications", 'link': 'https://towardsdatascience.com/getting-started-with-langchain-a-beginners-guide-to-building-llm-powered-applications-95fc8898732c', 'snippet': 'One of these new tools is LangChain. GitHub - hwchase17/langchain ... LangChain provides a variety of loaders for different types of ...', 'date': 'Apr 25, 2023', 'position': 3}, {'title': 'Langchain Document Loaders Part 1: Unstructured Files - YouTube', 'link': 'https://youtube.com/watch?v=O5C0wfsen98', 'snippet': 'This video is the first of many I will be doing about ...', 'date': 'Mar 17, 2023', 'attributes': {'Duration': '9:38', 'Posted': 'Mar 17, 2023'}, 'imageUrl': 'https://i.ytimg.com/vi/O5C0wfsen98/default.jpg?sqp=-oaymwEECHgQQw&rs=AMzJL3kvTf5IWJNB24EFMvgHWdYaUDCAIg', 'position': 4}, {'title': 'Using langchain for Question Answering on Own Data | by Onkar Mishra - Medium', 'link': 'https://medium.com/@onkarmishra/using-langchain-for-question-answering-on-own-data-3af0a82789ed', 'snippet': 'Now, we will run one more real-world example of TextSplitter with a PDF. from langchain.document_loaders import PyPDFLoader loader = PyPDFLoader ...', 'date': 'Aug 7, 2023', 'position': 5}, {'title': '4 Ways to Do Question Answering in LangChain | by Sophia Yang, Ph.D.', 'link': 'https://towardsdatascience.com/4-ways-of-question-answering-in-langchain-188c6707cc5a', 'snippet': 'Method 1: load_qa_chain. load_qa_chain provides the most generic interface for answering questions. It loads a chain that you can do QA for your ...', 'date': 'Apr 8, 2023', 'position': 6}, {'title': "Hamel's Blog - LangChain DocumentLoaders", 'link': 'https://hamel.dev/notes/llm/02_langchain_connectors.html', 'snippet': '(It can also be useful to hijack these loaders to acquire data for fine tuning!) For example, if you are trying to get data from a website as ...', 'date': 'Jul 5, 2023', 'position': 7}, {'title': 'LangChain Indexes: Document Loaders - Reddit', 'link': 'https://www.reddit.com/r/LangChain/comments/13s96o6/langchain_indexes_document_loaders/', 'snippet': '8.2K subscribers in the LangChain community. LangChain is an open-source development framework for LLM applications.', 'date': 'May 26, 2023', 'position': 8}, {'title': 'Is there a langchain document loader that loads data directly from an API? - Stack Overflow', 'link': 'https://stackoverflow.com/questions/77089740/is-there-a-langchain-document-loader-that-loads-data-directly-from-an-api', 'snippet': 'Recently I used SitemapLoader to query a website. from langchain ... 5511 silver badge77 bronze badges. Add a comment |. Related questions. 0.', 'date': 'Sep 12, 2023', 'sitelinks': [{'title': 'How to use LangChain to store, load, and query Loaders on LlamaHub? - Stack Overflow', 'link': 'https://stackoverflow.com/questions/76534952/how-to-use-langchain-to-store-load-and-query-loaders-on-llamahub'}, {'title': 'How can I use a python string as input for my langchain loader? - Stack Overflow', 'link': 'https://stackoverflow.com/questions/77193795/how-can-i-use-a-python-string-as-input-for-my-langchain-loader'}, {'title': 'Retrieving the page number from the document in question-answering task [LangChain]', 'link': 'https://stackoverflow.com/questions/76664629/retrieving-the-page-number-from-the-document-in-question-answering-task-langcha'}, {'title': 'Loading different document types in langchain for an all data source qa bot - Stack Overflow', 'link': 'https://stackoverflow.com/questions/77057531/loading-different-document-types-in-langchain-for-an-all-data-source-qa-bot'}], 'position': 9}], 'peopleAlsoAsk': [{'question': 'What are document loaders in langchain?', 'snippet': 'Document loaders provide a "load" method for loading data as documents from a configured source. They optionally implement a "lazy load" as well for lazily loading data into memory.', 'title': 'Document loaders - ️   Langchain', 'link': 'https://python.langchain.com/docs/modules/data_connection/document_loaders/'}, {'question': 'How to install Unstructured for Langchain document loaders?', 'snippet': 'Installation and Setup Install the Python SDK with pip install unstructured . You can install document specific dependencies with extras, i.e. pip install "unstructured[docx]" . To install the dependencies for all document types, use pip install "unstructured[all-docs]" .', 'title': 'Unstructured - ️   Langchain', 'link': 'https://python.langchain.com/docs/integrations/providers/unstructured'}, {'question': 'How do I create a langchain document object?', 'snippet': 'A document at its core is fairly simple. It consists of a piece of text and optional metadata. The piece of text is what we interact with the language model, while the optional metadata is useful for keeping track of metadata about the document (such as the source).', 'title': 'Creating documents - LangChain JS', 'link': 'https://js.langchain.com/docs/modules/data_connection/document_loaders/how_to/creating_documents'}, {'question': 'What is unstructured PDF loader?', 'snippet': 'Unstructured document loader allow users to pass in a strategy parameter that lets unstructured know how to partition the document. Currently supported strategies are "hi_res" (the default) and "fast" .', 'title': 'Unstructured File - ️   Langchain', 'link': 'https://python.langchain.com/docs/integrations/document_loaders/unstructured_file'}], 'relatedSearches': [{'query': 'Langchain string loader'}, {'query': 'Langchain load docx'}, {'query': 'Langchain PDF loader'}, {'query': 'Langchain Word document loader'}, {'query': 'Langchain HTML loader'}, {'query': 'Langchain YouTube loader'}, {'query': 'Langchain unstructured file loader'}, {'query': 'Langchain text splitter'}]}
#
# for d in dic['organic']:
#     print(d.get('link', None))
#
# [{'title': 'Llama2模型', 'content_summary': 'Llama2不仅开源了预训练模型，而且还开源了利用对话数据SFT后的Llama2-Chat模型，并对Llama2-Chat模型的微调进行了详细的介绍。开源模型目前有7B、13B、70B三种尺寸，预{'title': '预训练阶段', 'content_summary': '模型结构为Transformer结构，与Llama相同的是采用RMSNorm归一化、SwiGLU激活函数、RoPE位置嵌入、词表的构建与大小，与Llama不同的是增加GQA（分组查询注意力），扩增了模用cosin学习率，预热2000步后进行学习率衰减，最终降至峰值的10%，权重衰减系数为0.1，梯度裁剪值为1.0。但请注意：7b和13b模型并没有增加GQA！！！预训练阶段的损失如下图所示，可以看出，模型其实还没有完全收敛。预没打过。」'}, {'title': 'SFT阶段', 'content_summary': 'MetaAI进行实验时发现，少量高质量数据集训练模型的效果，要好于大量低质量数据集的训练效果。微调时初始学习率为2e−5，并采用余弦学习率下降，权重衰减为0.1每条样本target内容的loss。'}, {'title': '奖励模型', 'content_summary': '奖励模型是对提示生成的回复生成一个标量分值，评价模型生成质量，但发现有用性和安全性很难在同一个奖励模型表现都很好，因此，独立训练了的初始化来自于pretrained chat model检查点，将下一个Token预测分类器替换成标量奖励值回归器。训练时，采用带有边际约束的二元排序损失。'}, {'title': '训练参数设置', 'content_summary': '70B模型的最大学习率为5大小为1024。PPO训练时大批次为512，小批次为64，PPO裁剪阈值为0.2。'}, {'title': 'Iterative Fine-Tuning', 'content_summary': '随着收到更多批次的人类偏好数据，能够训练更好的奖励模型并收集更多提示。因此，训练, {'title': '多轮对话一致性', 'content_summary': '最初的RLHF模型在几轮对话后忘记最初的指令，为了解决这些限制，提出Ghost Attention方法（Gatt，其实是一个训练trick）来增强模型对指令的遵从。'}, {'title': 'Lary': '如果你本地没有资源，又想体验Llama2的话，可以使用线上平台。推理服务部署可以使用揽睿星舟平台。'}, {'title': '新建工作空间', 'content_summary': '进入https://www.lanrui-ai.com/，登陆。进入控制台的工作-cu1117。选择预训练模型: llama-2-7b和llama-2-7b-chat。创建实例。'}, {'title': '运行脚本', 'content_summary': '进入文件夹:cd /ark-contexts/imported_models。下载代码:sudo git clone https://github.com/faceudo pip install -e .。执行脚本。'}]
